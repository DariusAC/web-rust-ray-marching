/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function __wbg_body_free(a: number): void;
export function __wbg_get_body_r(a: number): number;
export function __wbg_set_body_r(a: number, b: number): void;
export function __wbg_get_body_m(a: number): number;
export function __wbg_set_body_m(a: number, b: number): void;
export function __wbg_get_body_x(a: number): number;
export function __wbg_set_body_x(a: number, b: number): void;
export function __wbg_get_body_v(a: number): number;
export function __wbg_set_body_v(a: number, b: number): void;
export function __wbg_get_body_a(a: number): number;
export function __wbg_set_body_a(a: number, b: number): void;
export function body_new(a: number, b: number, c: number, d: number): number;
export function body_kinetic_energy(a: number): number;
export function body_potential_energy(a: number, b: number): number;
export function body_gravity(a: number, b: number): number;
export function body_collide(a: number, b: number): number;
export function body_merge(a: number, b: number): number;
export function body_bounce(a: number, b: number): number;
export function body_dist(a: number, b: number): number;
export function body_default(): number;
export function body_update(a: number, b: number): void;
export function body_force(a: number, b: number): void;
export function __wbg_instance_free(a: number): void;
export function instance_new(a: number, b: number, c: number, d: number): number;
export function instance_kinetic_energy(a: number): number;
export function instance_potential_energy(a: number): number;
export function instance_update(a: number): void;
export function instance_screen_out(a: number, b: number): void;
export function instance_add_body(a: number, b: number): void;
export function __wbg_vec3f_free(a: number): void;
export function __wbg_get_vec3f_x(a: number): number;
export function __wbg_set_vec3f_x(a: number, b: number): void;
export function __wbg_get_vec3f_y(a: number): number;
export function __wbg_set_vec3f_y(a: number, b: number): void;
export function __wbg_get_vec3f_z(a: number): number;
export function __wbg_set_vec3f_z(a: number, b: number): void;
export function vec3f_default(): number;
export function vec3f_new(a: number, b: number, c: number): number;
export function vec3f_magnitude(a: number): number;
export function vec3f_dist(a: number, b: number): number;
export function vec3f_normalize(a: number): number;
export function vec3f_scalar_multiply(a: number, b: number): number;
export function vec3f_scalar_divide(a: number, b: number): number;
export function vec3f_add(a: number, b: number): number;
export function vec3f_sub(a: number, b: number): number;
export function __wbindgen_add_to_stack_pointer(a: number): number;
export function __wbindgen_free(a: number, b: number): void;
